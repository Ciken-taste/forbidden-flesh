[gd_scene load_steps=9 format=3 uid="uid://b42f80hf6678h"]

[ext_resource type="Texture2D" uid="uid://c6qc360etuiia" path="res://addons/godot-prototype-texture/PNG/checker_blue_512x512.png" id="1_5r7vb"]
[ext_resource type="PackedScene" uid="uid://bdabh11ntrni6" path="res://Objects/Player/player.tscn" id="2_7hl60"]

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_t70a3"]
sky_horizon_color = Color(0.64625, 0.65575, 0.67075, 1)
sky_energy_multiplier = 1.1
ground_horizon_color = Color(0.64625, 0.65575, 0.67075, 1)

[sub_resource type="Sky" id="Sky_d30bm"]
sky_material = SubResource("ProceduralSkyMaterial_t70a3")

[sub_resource type="Environment" id="Environment_4p0bq"]
background_mode = 2
sky = SubResource("Sky_d30bm")
tonemap_mode = 2
glow_enabled = true

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_bkuyg"]
albedo_texture = ExtResource("1_5r7vb")

[sub_resource type="PlaneMesh" id="PlaneMesh_de2ow"]

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_q23bb"]
data = PackedVector3Array(1, 0, 1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0, -1, 1, 0, -1)

[node name="DemoLevel" type="Node3D"]

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(0.228351, -0.348899, 0.908914, 0, 0.93358, 0.358368, -0.973579, -0.0818336, 0.213184, 0, 0, 0)
shadow_enabled = true

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_4p0bq")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(10, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0)
material_override = SubResource("StandardMaterial3D_bkuyg")
mesh = SubResource("PlaneMesh_de2ow")

[node name="StaticBody3D" type="StaticBody3D" parent="MeshInstance3D"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="MeshInstance3D/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_q23bb")

[node name="Player" parent="." instance=ExtResource("2_7hl60")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.05058, 0)
